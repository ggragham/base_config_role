---
- name: Ensure all labeled devices are present
  block:
    - name: Collect all unique labels
      set_fact:
        labels_list: >-
          {{
            (
              STORAGE_LUKS_LIST       | default([]) | map(attribute='label') +
              STORAGE_GENERIC_FS_LIST | default([]) | map(attribute='label') +
              STORAGE_BTRFS_LIST      | default([]) | map(attribute='label')
            ) | reject('equalto', '') | unique | list
          }}

    - name: Verify all labeled devices
      command: blkid -L {{ item }}
      register: label_check
      loop: '{{ labels_list }}'
      failed_when: false
      changed_when: false
      become: true

    - name: Collect missing labels
      set_fact:
        missing_labels: "{{ label_check.results | rejectattr('rc', 'equalto', 0) | map(attribute='item') | list }}"

    - name: Fail if any labels are missing
      fail:
        msg: 'Missing devices with labels: {{ missing_labels }}'
      when: missing_labels | length > 0

- name: Decrypt storages
  block:
    - name: Ensure cryptsetup is installed on Debian-based systems
      apt:
        name: cryptsetup
        state: present
        update_cache: true
      when: ansible_os_family == "Debian"
      become: true

    - name: Ensure cryptsetup is installed on RHEL-based systems
      dnf:
        name: cryptsetup
        state: present
        update_cache: true
        install_weak_deps: false
      when: ansible_os_family == "RedHat"
      become: true

    - name: Copy keyfile
      copy:
        src: '{{ item.keyfile_src }}'
        dest: '{{ item.keyfile_dest }}'
        mode: 0400
      loop: '{{ STORAGE_LUKS_LIST }}'
      become: true

    - name: Add disk to crypttab
      lineinfile:
        path: /etc/crypttab
        line: '{{ item.mapper }} LABEL={{ item.label }} {{ item.keyfile_dest }} luks'
        state: present
      loop: '{{ STORAGE_LUKS_LIST }}'
      become: true

    - name: Decrypt disks in cryptab
      command: cryptdisks_start '{{ item.mapper }}'
      loop: '{{ STORAGE_LUKS_LIST }}'
      become: true

  when: STORAGE_LUKS_LIST | length > 0

- name: Mount generic FS storages
  block:
    - name: Make dirs for generic fs mountpoints
      file:
        path: '{{ item.mount_point }}'
        state: directory
        mode: 0755
        owner: '{{ item.owner }}'
      loop: '{{ STORAGE_GENERIC_FS_LIST }}'
      when: STORAGE_GENERIC_FS_LIST | length > 0
      become: true

    - name: Mount generic FS storages
      mount:
        path: '{{ item.mount_point }}'
        src: LABEL={{ item.label }}
        fstype: '{{ item.fstype }}'
        opts: '{{ item.opts }}'
        state: mounted
      loop: '{{ STORAGE_GENERIC_FS_LIST }}'
      become: true

  when: STORAGE_GENERIC_FS_LIST | length > 0

- name: Mount BTRFS storages
  block:
    - name: Ensure btrfs-progs is installed on Debian-based systems
      apt:
        name: btrfs-progs
        state: present
        update_cache: true
      become: true

    - name: Make dirs for btrfs mountpoints
      file:
        path: '{{ item.mount_point }}'
        state: directory
        mode: 0755
        owner: '{{ item.owner }}'
      loop: '{{ STORAGE_BTRFS_LIST }}'
      when: STORAGE_BTRFS_LIST | length > 0
      become: true

    - name: Mount subvolumes
      mount:
        path: '{{ item.mount_point }}'
        src: LABEL={{ item.label }}
        fstype: btrfs
        opts: subvol={{ item.subvol }},compress={{ item.compression }},x-systemd.requires=cryptsetup.target
        state: mounted
      loop: '{{ STORAGE_BTRFS_LIST }}'
      loop_control:
        loop_var: item
      become: true

  when: STORAGE_BTRFS_LIST | length > 0
