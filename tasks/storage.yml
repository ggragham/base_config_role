---
- name: Decrypt storages
  block:
    - name: Check LUKS devices
      include_tasks: _storage_check_labels.yml
      vars:
        label_type: LUKS
        input_list: '{{ STORAGE_LUKS_LIST }}'

    - name: Ensure cryptsetup is installed on Debian-based systems
      apt:
        name: cryptsetup
        state: present
        update_cache: true
      when: ansible_os_family == "Debian"
      become: true

    - name: Ensure cryptsetup is installed on RHEL-based systems
      dnf:
        name: cryptsetup
        state: present
        update_cache: true
        install_weak_deps: false
      when: ansible_os_family == "RedHat"
      become: true

    - name: Copy keyfile
      copy:
        src: '{{ item.keyfile_src }}'
        dest: '{{ item.keyfile_dest }}'
        mode: 0400
      loop: '{{ STORAGE_LUKS_LIST }}'
      become: true

    - name: Add disk to crypttab
      lineinfile:
        path: /etc/crypttab
        line: '{{ item.mapper }} LABEL={{ item.label }} {{ item.keyfile_dest }} luks'
        state: present
      loop: '{{ STORAGE_LUKS_LIST }}'
      become: true

    - name: Check if LUKS mapper exists
      stat:
        path: /dev/mapper/{{ item.mapper }}
      register: mapper_stat
      loop: '{{ STORAGE_LUKS_LIST }}'
      become: true

    - name: Decrypt LUKS volume if not already opened
      command: >
        cryptsetup luksOpen /dev/disk/by-label/{{ item.item.label }} {{ item.item.mapper }} --key-file {{ item.item.keyfile_dest }}
      loop: '{{ mapper_stat.results }}'
      when: not item.stat.exists
      become: true

  when: STORAGE_LUKS_LIST | length > 0

- name: Mount generic FS storages
  block:
    - name: Check generic FS devices
      include_tasks: _storage_check_labels.yml
      vars:
        label_type: generic FS
        input_list: '{{ STORAGE_GENERIC_FS_LIST }}'

    - name: Make dirs for generic fs mountpoints
      file:
        path: '{{ item.mount_point }}'
        state: directory
        mode: 0755
        owner: '{{ item.owner }}'
      loop: '{{ STORAGE_GENERIC_FS_LIST }}'
      when: STORAGE_GENERIC_FS_LIST | length > 0
      become: true

    - name: Mount generic FS storages
      mount:
        path: '{{ item.mount_point }}'
        src: LABEL={{ item.label }}
        fstype: '{{ item.fstype }}'
        opts: '{{ item.opts }}'
        state: mounted
      loop: '{{ STORAGE_GENERIC_FS_LIST }}'
      become: true

  when: STORAGE_GENERIC_FS_LIST | length > 0

- name: Mount BTRFS storages
  block:
    - name: Check Btrfs devices
      include_tasks: _storage_check_labels.yml
      vars:
        label_type: Btrfs
        input_list: '{{ STORAGE_BTRFS_LIST }}'

    - name: Ensure btrfs-progs is installed on Debian-based systems
      apt:
        name: btrfs-progs
        state: present
        update_cache: true
      become: true

    - name: Make dirs for btrfs mountpoints
      file:
        path: '{{ item.mount_point }}'
        state: directory
        mode: 0755
        owner: '{{ item.owner }}'
      loop: '{{ STORAGE_BTRFS_LIST }}'
      when: STORAGE_BTRFS_LIST | length > 0
      become: true

    - name: Mount subvolumes
      mount:
        path: '{{ item.mount_point }}'
        src: LABEL={{ item.label }}
        fstype: btrfs
        opts: subvol={{ item.subvol }},compress={{ item.compression }},x-systemd.requires=cryptsetup.target
        state: mounted
      loop: '{{ STORAGE_BTRFS_LIST }}'
      loop_control:
        loop_var: item
      become: true

  when:
    - STORAGE_BTRFS_LIST | length > 0
    - ansible_os_family != "RedHat"
